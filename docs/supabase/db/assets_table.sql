-- =================================================================================================
-- Assets Table Schema, Policy and Constraints
-- =================================================================================================

-- 基于实际表结构的 assets 表约束和索引
-- 这个脚本应该在 Supabase 中执行以确保数据完整性

-- 1. 确保 assets 表结构正确（基于现有表结构）
DO $$ 
BEGIN
  -- Check if table exists
  IF NOT EXISTS (
    SELECT FROM pg_tables 
    WHERE schemaname = 'public' 
    AND tablename = 'assets'
  ) THEN
    -- Create table if it doesn't exist
    CREATE TABLE public.assets (
      id bigint generated by default as identity not null,
      created_at timestamp with time zone not null default now(),
      user_id uuid null,
      chat_id uuid null default gen_random_uuid(),
      message_id text null,
      models json null default '[]'::json,
      content text null,
      results json null,
      user_image json null,

      constraint assets_pkey primary key (id),
      constraint assets_chat_id_fkey foreign KEY (chat_id) references chat_msgs (id) on delete cascade,
      constraint assets_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete cascade,
      constraint assets_chat_id_message_id_unique unique (chat_id, message_id)
    ) TABLESPACE pg_default;
  END IF;
END $$;

-- 2. Enable RLS and create policy if not exists
ALTER TABLE public.assets ENABLE ROW LEVEL SECURITY;
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT FROM pg_policies 
    WHERE schemaname = 'public' 
    AND tablename = 'assets'
    AND policyname = 'Allow users to access their own data'
  ) THEN
    -- Create policy if it doesn't exist
    CREATE POLICY "Allow users to access their own data" ON public.assets
    TO public
    USING (auth.uid() = user_id)
    WITH CHECK (auth.uid() = user_id);
  END IF;
END $$;

-- 3. Create Index and Composite Index
CREATE INDEX IF NOT EXISTS idx_assets_user_id ON public.assets (user_id);
CREATE INDEX IF NOT EXISTS idx_assets_user_id_chat_id ON public.assets (user_id, chat_id);
